module Base
{
	vehicle en72_Javelin
	{
		model
		{
			file = en72_Javelin_Base,
			scale = 1.0000,
			offset = 0.0000 0.6900 0.0000,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Baja,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Black,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Burgundy,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Jolly,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Red,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Snow,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Stardust,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_Surfside,
		}

		skin
		{
			texture = Vehicles/Vehicle_en72_Javelin_Ext_TransAm,
		}

		textureMask = Vehicles/Vehicle_en72_Javelin_Overlay_Mask,
		textureLights = Vehicles/Vehicle_en72_Javelin_Overlay_Lights,
		textureDamage1Overlay = Vehicles/Vehicle_en72_Javelin_Overlay_Blood,
		textureDamage2Overlay = Vehicles/Vehicle_en72_Javelin_Overlay_Blood,
		textureDamage1Shell = Vehicles/Vehicle_en72_Javelin_Overlay_Damage,
		textureDamage2Shell = Vehicles/Vehicle_en72_Javelin_Overlay_Damage,
		textureRust = Vehicles/Vehicle_en72_Javelin_Overlay_Rust,

		sound
		{
			engine = VehicleEngineSportsCar,
			engineStart = VehicleEngineSportsCar,
			engineTurnOff = VehicleEngineSportsCar,
			horn = VehicleHornSportsCar,
			ignitionFail = VehicleIgnitionFailSportsCar,
		}

		extents = 1.7400 1.0200 4.3800,
		physicsChassisShape = 1.7400 1.0200 4.3800,
		centerOfMassOffset = 0.0000 0.7700 0.0000,
		shadowExtents = 1.7373 4.3762,
		shadowOffset = 0.0000 0.0024,
		mechanicType = 3,
		offRoadEfficiency = 1.0,
		playerDamageProtection = 1.0,
		frontEndHealth = 150,
		rearEndHealth = 150,
		mass = 1010,
		engineRPMType = firebird,
		engineRepairLevel = 4,
		engineForce = 6776,
		engineLoudness = 140,
		engineQuality = 70,
		maxSpeed = 95f,
		gearRatioCount = 3,
		gearRatioR = 2.5,
		gearRatio1 = 2.5,
		gearRatio2 = 1.5,
		gearRatio3 = 1.0,
		brakingForce = 90,
		stoppingMovementForce = 2.2f,
		rollInfluence = 0.9f,
		steeringIncrement = 0.03,
		steeringClamp = 0.3,
		suspensionStiffness = 45,
		suspensionCompression = 3.9,
		suspensionDamping = 3.1,
		maxSuspensionTravelCm = 15,
		suspensionRestLength = 0.2,
		wheelFriction = 1.6f,
		seats = 4,

		wheel FrontLeft
		{
			front = true,
			offset = 0.7000 -0.4000 1.2500,
			radius = 0.28f,
			width = 0.2f,
		}

		wheel FrontRight
		{
			front = true,
			offset = -0.7000 -0.4000 1.2500,
			radius = 0.28f,
			width = 0.2f,
		}

		wheel RearLeft
		{
			front = false,
			offset = 0.7000 -0.4000 -1.3000,
			radius = 0.28f,
			width = 0.2f,
		}

		wheel RearRight
		{
			front = false,
			offset = -0.7000 -0.4000 -1.3000,
			radius = 0.28f,
			width = 0.2f,
		}

		template = PassengerSeat4,

		passenger FrontLeft
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = 0.3600 -0.1800 -0.0200,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 1.0000 -0.6800 0.0000,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}
		}

		passenger FrontRight
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = -0.3600 -0.1800 -0.0200,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -1.0000 -0.6800 0.0000,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}
		}

		passenger RearLeft
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = 0.3600 -0.1800 -0.8000,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 1.0000 -0.6800 -0.7600,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}
		}

		passenger RearRight
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = -0.3600 -0.1800 -0.8000,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -1.0000 -0.6800 -0.7600,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}
		}

		area Engine
		{
			xywh = 0.0000 2.6900 1.4000 1.0000,
		}

		area TruckBed
		{
			xywh = 0.0000 -2.6900 1.4000 1.0000,
		}

		area SeatFrontLeft
		{
			xywh = 1.3700 0.0000 1.0000 1.0000,
		}

		area SeatFrontRight
		{
			xywh = -1.3700 0.0000 1.0000 1.0000,
		}

		area GasTank
		{
			xywh = 0.0200 -2.6900 1.0000 1.0000,
		}

		area TireFrontLeft
		{
			xywh = 1.2100 1.2500 0.6800 0.6800,
		}

		area TireFrontRight
		{
			xywh = -1.2100 1.2500 0.6800 0.6800,
		}

		area TireRearLeft
		{
			xywh = 1.2100 -1.3400 0.6800 0.6800,
		}

		area TireRearRight
		{
			xywh = -1.2100 -1.3400 0.6800 0.6800,
		}

		template = Trunk/part/TruckBed,

		part TruckBed
		{
			container
			{
				capacity = 45,
			}
		}

		template = TrunkDoor,

		part TrunkDoor
		{
			model TrunkDoor
			{
				file = en72_Javelin_Trunk,
				rotate = 0.0000 0.0000 0.0000,
			}

			anim Close
			{
				anim = ArmatureAction,
				reverse = TRUE,
				rate = 3.0,
			}

			anim Open
			{
				anim = ArmatureAction,
				reverse = FALSE,
				rate = 0.8,
			}

			anim Closed
			{
				anim = ArmatureAction,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = ArmatureAction,
				reverse = TRUE,
				animate = FALSE,
			}
		}

		template = Seat/part/SeatFrontLeft,
		template = Seat/part/SeatFrontRight,
		template = Seat/part/SeatRearLeft,
		template = Seat/part/SeatRearRight,

		part GloveBox
		{
			area = SeatFrontRight,
			itemType = Base.GloveBox,
			mechanicRequireKey = true,

			model
			{
				file = en72_Javelin_Interior,
			}

			container
			{
				capacity = 8,
				test = Vehicles.ContainerAccess.GloveBox,
			}

			lua
			{
				create = Vehicles.Create.Default,
			}
		}

		template = Battery,

		part Battery
		{
			model Battery
			{
				file = en72_Javelin_Battery,
			}
		}

		template = Engine,
		template = GasTank,

		part GasTank
		{
			mechanicRequireKey = true,

			model GasTank
			{
				file = en72_Javelin_GasTank,
			}
		}

		template = Muffler,

		part Muffler
		{
			model Muffler
			{
				file = en72_Javelin_Muffler,
			}
		}

		template = EngineDoor,

		part EngineDoor
		{
			model EngineDoor
			{
				file = en72_Javelin_Hood,
			}

			anim Close
			{
				anim = ArmatureAction,
				reverse = TRUE,
				rate = 2.0,
			}

			anim Open
			{
				anim = ArmatureAction,
				reverse = FALSE,
				rate = 0.6,
			}

			anim Closed
			{
				anim = ArmatureAction,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = ArmatureAction,
				reverse = TRUE,
				animate = FALSE,
			}
		}

		part Heater
		{
			category = engine,

			lua
			{
				update = Vehicles.Update.Heater,
			}
		}

		part PassengerCompartment
		{
			category = nodisplay,

			lua
			{
				update = Vehicles.Update.PassengerCompartment,
			}
		}

		template = Window/part/WindowFrontLeft,
		template = Window/part/WindowFrontRight,
		template = Window/part/WindowRearLeft,
		template = Window/part/WindowRearRight,
		template = Windshield/part/Windshield,
		template = Windshield/part/WindshieldRear,

		part WindowFrontLeft
		{
			model Default
			{
				file = en72_Javelin_WindowFL,
			}

			anim ClosedToOpen
			{
				anim = ArmatureAction,
				animate = FALSE,
				rate = 0.1,
			}
		}

		part WindowFrontRight
		{
			model Default
			{
				file = en72_Javelin_WindowFR,
			}

			anim ClosedToOpen
			{
				anim = ArmatureAction,
				animate = FALSE,
				rate = 0.1,
			}
		}

		part WindowRearLeft
		{
			model Default
			{
				file = en72_Javelin_WindowRL,
			}
		}

		part WindowRearRight
		{
			model Default
			{
				file = en72_Javelin_WindowRR,
			}
		}

		part Windshield
		{
			model Default
			{
				file = en72_Javelin_Windshield,
			}
		}

		part WindshieldRear
		{
			model Default
			{
				file = en72_Javelin_WindshieldRear,
			}
		}

		template = Door/part/DoorFrontLeft,
		template = Door/part/DoorFrontRight,

		part DoorFrontLeft
		{
			model Default
			{
				file = en72_Javelin_DoorFL,
			}

			anim Close
			{
				anim = ArmatureAction,
				reverse = TRUE,
				rate = 3,
			}

			anim Open
			{
				anim = ArmatureAction,
				reverse = FALSE,
				rate = 1,
			}

			anim Closed
			{
				anim = ArmatureAction,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = ArmatureAction,
				reverse = TRUE,
				animate = FALSE,
			}
		}

		part DoorFrontRight
		{
			model Default
			{
				file = en72_Javelin_DoorFR,
			}

			anim Close
			{
				anim = ArmatureAction,
				reverse = TRUE,
				rate = 3,
			}

			anim Open
			{
				anim = ArmatureAction,
				reverse = FALSE,
				rate = 1,
			}

			anim Closed
			{
				anim = ArmatureAction,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = ArmatureAction,
				reverse = TRUE,
				animate = FALSE,
			}
		}

		template = Tire,

		part Tire*
		{
			model InflatedTirePlusWheel
			{
				file = en72_Javelin_Wheel,
			}
		}

		template = Brake,

		part BrakeFrontLeft
		{
			model Default
			{
				file = en72_Javelin_BrakeFL,
			}
		}

		part BrakeFrontRight
		{
			model Default
			{
				file = en72_Javelin_BrakeFR,
			}
		}

		part BrakeRearLeft
		{
			model Default
			{
				file = en72_Javelin_BrakeRL,
			}
		}

		part BrakeRearRight
		{
			model Default
			{
				file = en72_Javelin_BrakeRR,
			}
		}

		part Brake*
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = Suspension,

		part Suspension*
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = Radio,
		template = Headlight,
		/*template = JavelinArmor,*/

		attachment trailer
		{
			offset = 0.0000 -0.3600 -1.9800,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = -1.0000,
		}

		attachment trailerfront
		{
			offset = 0.0000 -0.2700 1.9900,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = 1.0000,
		}
	}
}
