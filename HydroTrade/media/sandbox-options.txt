VERSION = 1,

option ServerTweaker.SaveClientOptions {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = SaveClientOptions
}

option ServerTweaker.SaveAdminPower {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = SaveAdminPower
}

option ServerTweaker.AddClientCache {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = AddClientCache
}

option ServerTweaker.AllowAdminToolsForGM {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = AllowAdminToolsForGM
}

option ServerTweaker.DisallowSpawnItemsForObservers {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = DisallowSpawnItemsForObservers
}

option ServerTweaker.DisableAimOutline {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = DisableAimOutline
}

option ServerTweaker.DisableTradeWithPlayers {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = DisableTradeWithPlayers
}

option ServerTweaker.ProtectVehicleInSafehouse {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = ProtectVehicleInSafehouse
}

option ServerTweaker.ScreenBlackoutOnDeath {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = ScreenBlackoutOnDeath
}

option ServerTweaker.HighlightSafehouse {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = HighlightSafehouse
}

option ServerTweaker.TweakFirearmsSoundRadius {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = TweakFirearmsSoundRadius
}

option ServerTweaker.SetGeneralChatStreamAsDefault {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = SetGeneralChatStreamAsDefault
}

option ServerTweaker.DisplayCharacterCoordinates {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = DisplayCharacterCoordinates
}

option ServerTweaker.AddSatelliteViewToMap {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = AddSatelliteViewToMap
}

option ServerTweaker.DisplaySafehouseAreaSize {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = DisplaySafehouseAreaSize
}

option ServerTweaker.CustomSafezoneAdminTweaks {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = CustomSafezoneAdminTweaks
}

option ServerTweaker.TweakOverlayText {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = TweakOverlayText
}

option ServerTweaker.PinOverlayServerInfoText {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = PinOverlayServerInfoText
}

option ServerTweaker.HideServerOptionsFromPlayers {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = HideServerOptionsFromPlayers
}

option ServerTweaker.HideTicketsFromPlayers {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = HideTicketsFromPlayers
}

option ServerTweaker.AddSafehouseToSpawnLocations {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = AddSafehouseToSpawnLocations
}

option ServerTweaker.AdminsFreeAddToSafehouse {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = AdminsFreeAddToSafehouse
}

option ServerTweaker.TakeSafehouseLimitations {
  type        = boolean,
  default     = false,
  page        = ServerTweaker,
  translation = TakeSafehouseLimitations
}

option ServerTweaker.SafehouseAreaLimit {
  type        = integer,
  min         = 0,
  max         = 10000,
  default     = 0,
  page        = ServerTweaker,
  translation = SafehouseAreaLimit
}

option ServerTweaker.CheckSafehouseIntersections {
  type        = boolean,
  default     = true,
  page        = ServerTweaker,
  translation = CheckSafehouseIntersections
}

option ServerTweaker.SafehouseDeadZone {
  type        = integer,
  min         = 0,
  max         = 100,
  default     = 0,
  page        = ServerTweaker,
  translation = SafehouseDeadZone
}

option MileageExpansion.Default_Unit
{
    type = enum,
    default = 2,
	numValues = 2,
    page = MileageExpansion,
    translation = MileageExpansion_Default_Unit,
}

option MileageExpansion.Meter_Per_Kilometer
{
    type = integer,
    min = 100,
    max = 2000,
    default = 1000,
    page = MileageExpansion,
    translation = MileageExpansion_Meter_Per_Kilometer,
}

option MileageExpansion.Kilometer_Short_Name
{
    type = string,
    default = km,
    page = MileageExpansion,
    translation = MileageExpansion_Kilometer_Short_Name,
}

option MileageExpansion.Miles_Short_Name
{
    type = string,
    default = mi,
    page = MileageExpansion,
    translation = MileageExpansion_Miles_Short_Name,
}

option MileageExpansion.Minimum_Starting_Odometer
{
    type = integer,
    min = 0,
    max = 999999,
    default = 100000,
    page = MileageExpansion,
    translation = MileageExpansion_Minimum_Starting_Odometer,
}

option MileageExpansion.Maximum_Starting_Odometer
{
    type = integer,
    min = 0,
    max = 999999,
    default = 300000,
    page = MileageExpansion,
    translation = MileageExpansion_Maximum_Starting_Odometer,
}

option VehicleRecycling.ActionTimeMultiplier
{
	type = integer, min = 1, max = 100, default = 1,
	page = VehicleRecycling, translation = VehicleRecycling_ActionTimeMultiplier,
}

option VehicleRecycling.RecyclingClaimedVehicle
{
	type = boolean, default = false,
	page = VehicleRecycling, translation = VehicleRecycling_RecyclingClaimedVehicle,
}

option VehicleRecycling.RecyclingClaimedSmashedCar
{
	type = boolean, default = true,
	page = VehicleRecycling, translation = VehicleRecycling_RecyclingClaimedSmashedCar,
}

option VehicleRecycling.RecyclingClaimedBurntCar
{
	type = boolean, default = true,
	page = VehicleRecycling, translation = VehicleRecycling_RecyclingClaimedBurntCar,
}

option VehicleRecycling.UninstallParts
{
	type = boolean, default = false,
	page = VehicleRecycling, translation = VehicleRecycling_UninstallParts,
}

option VehicleRecycling.RecyclingSmashedCar
{
	type = boolean, default = true,
	page = VehicleRecycling, translation = VehicleRecycling_RecyclingSmashedCar,
}

option VehicleRecycling.RecyclingBurntCar
{
	type = boolean, default = true,
	page = VehicleRecycling, translation = VehicleRecycling_RecyclingBurntCar,
}

option VehicleRecycling.ExceptionListRate
{
    type = string, default = Base.Car1;Base.Car2,
    page = VehicleRecycling, translation = VehicleRecycling_ExceptionListRate,
}

option VehicleRecycling.OldVersionNeededPropane
{
	type = boolean, default = false,
	page = VehicleRecycling, translation = VehicleRecycling_OldVersionNeededPropane,
}

option SafeHouseClose.CloseRoom
{
   type = string, 
   default = aesthetic;aestheticstorage;all;armyhanger;armystorage;armysurplus;artstore;bakery;bakerykitchen;bandkitchen;bandlivingroom;bandmerch;barkitchen;bar;barstorage;batfactory;bathroom;batstorage;batteryfactory;batterystorage;bedroom;beergarden;bookstore;bowlingalley;breakroom;brewery;brewerystorage;burgerkitchen;burgerstorage;butcher;cabinetfactory;cabinetshipping;cafeteria;cafeteriakitchen;camerastore;cafekitchen;cafe;campingstorage;camping;candystore;candystorage;carsupply;chinesekitchen;chineserestaurant;classroom;closet;clothingstorage;clothingstore;construction;conveniencestore;cornerstore;cornerstorestorage;daycare;deepfrykitchen;dentiststorage;departmentstorage;departmentstore;dinnerkitchen;dining;dogfoodfactory;dogfoodshipping;dogfoodstorage;donutdining;donutkitchen;donutkitchenstorage;electronicstorage;electronicstore;empty;factory;factorystorage;farmstorage;firestoorage;fishchipskitchen;fishingstorage;fossoil;fryshipping;furniturestorage;furniturestore;garagestorage;gardenstore;gasstorage;gasstore;generalstorestorage;generalstore;giftstorage;giftstore;gigamartkitchen;gigamart;grocery;grocerystorage;grocery;gunstorestorage;gunstore;gym;hall;hospitalstorage;housewarestore;hunting;icecreamkitchen;icecream;italiankitchen;italianrestraunt;janitor;jayschickendining;jayschickenkitchen;jewelrystorage;jewelrystore;kennels;kitchen_crepe;kitchen;kitchenwares;knifefactory;knifeshipping;knifestore;lasertag;laundry;leatherclothesstore;library;liquorstore;livingroom;lobby;loggingfactory;loggingtruck;mechanic;medicalstorage;medical;metalshipping;metalshop;mexicankitchen;motelbedroom;motelroomoccupied;motelroom;motelroomoccupied;movierental;musicstore;newspaperprint;newspapershipping;newspaperstorage;office;officestorage;optometrist;paintershop;pawnshop;pawnshopcooking;pawnshopoffice;pawnshopstorage;pharmacystorage;pharmacy;photoroom;picnic;pileocrepe;pizzakitchen;pizzawhirled;plazastore1;policestorage;pool;poststorage;post;potatostorage;prisoncells;producestorage;radiofactory;radioshipping;radiostorage;restaurantkitchen;restaurant;schoolstorage;seafoodkitchen;security;sewingstore;sewingstorage;shed;shoestore;sodatruck;spiffodining;spiffoskitchen;spiffosstorage;sportstorage;sportstore;storageunit;stripclub;sushidining;sushikitchen;theatrekitchen;theatrestorage;theatre;toolstorage;toolstore;toystore;toystorestorage;warehouse;westernkitchen;whiskeybottling;wirefactory;zippeestorage;zippeestore,
   
   page = SafeHouse_CloseRoom_Base, 
   translation = SafeHouse_CloseRoom,
}


option SafeHouseClose.CloseZone
{
   type = string, 
   default = 117/144/9/39;57/68/51/56;108/122/66/71;105/110/92/106;97/105/126/131;79/84/112/118;70/74/81/85;52/56/58/61;54/57/95/97;55/59/124/125;75/78/117/120;99/102/108/112;100/105/92/97;115/119/95/102;114/118/87/89;115/117/83/89;135/140/56/59;77/90/63/72,
   
   page = SafeHouse_CloseRoom_Base, 
   translation = SafeHouse_CloseZone,
}

option SafeHouseClose.OwnerListForUpdate
{
   type = string, 
   default = admin,
   
   page = SafeHouse_CloseRoom_Base, 
   translation = SafeHouse_OwnerListForUpdate,
}